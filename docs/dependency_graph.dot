digraph Dependencies {
    rankdir=LR;
    node [shape=box];

    // Nodes with no incoming dependencies
    "integrate";

    // Dependency relationships:
    "clmm_pool"    -> "price_provider"
    "integrate"    -> "price_provider"

    "integrate"    -> "liquidity_locker_v1"
    "integrate"    -> "liquidity_locker_v2"

    "liquidity_locker_v1" -> "clmm_pool"
    "liquidity_locker_v1" -> "integer_mate"
    "liquidity_locker_v1" -> "price_provider"
    "liquidity_locker_v1" -> "gauge_cap"
    "liquidity_locker_v1" -> "locker_cap"


    "liquidity_locker_v2" -> "clmm_pool"
    "liquidity_locker_v2" -> "integer_mate"
    "liquidity_locker_v2" -> "price_provider"
    "liquidity_locker_v2" -> "gauge_cap"
    "liquidity_locker_v2" -> "distribution"
    "liquidity_locker_v2" -> "locker_cap"


    "distribution" -> "clmm_pool";
    "integrate"    -> "clmm_pool";
    "integrate"    -> "distribution";

    "clmm_pool"    -> "move_stl";
    "integrate"    -> "move_stl";

    "clmm_pool"    -> "integer_mate";
    "integrate"    -> "integer_mate";
    "distribution"  -> "integer_mate";

    "clmm_pool"    -> "gauge_cap";
    "distribution" -> "gauge_cap";
    "integrate"    -> "gauge_cap";
    "distribution" -> "locker_cap"

    "price_monitor" -> "clmm_pool"
    "price_monitor" -> "integer_mate"
    "distribution" -> "price_monitor"

    "ve" -> "integer_mate"
    "distribution" -> "ve"
    "integrate" -> "ve"
    "liquidity_locker_v2" -> "ve"

    "airdrop" -> "ve"

}